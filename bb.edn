{:paths ["script" "build"]
 :deps {lread/status-line {:git/url "https://github.com/lread/status-line.git"
                           :sha "cf44c15f30ea3867227fa61ceb823e5e942c707f"}
        version-clj/version-clj {:mvn/version "2.0.2"}}
 :tasks {;; setup
         :requires ([babashka.fs :as fs]
                    [clojure.string :as string]
                    [lread.status-line :as status])
         :enter (let [{:keys [name]} (current-task)] (status/line :head "TASK %s %s" name (string/join " " *command-line-args*)))
         :leave (let [{:keys [name]} (current-task)] (status/line :detail "\nTASK %s done." name))

         ;; tasks
         clean
         {:doc "Delete any work/cache dirs"
          :task (doseq [dir ["target" ".cpcache"]]
                  (if (fs/exists? dir)
                    (do
                      (status/line :detail "Deleting: %s" dir)
                      (fs/delete-tree dir))
                    (status/line :detail "Does not exist: %s" dir)))}
         download-deps
         {:doc "Bring down all the clojure deps"
          :task download-deps/-main}
         test:jvm
         {:doc "Runs tests under JVM Clojure [--clj-version] (recognizes cognitect test-runner args)"
          :task test-jvm/-main}
         test:bb
         {:doc "Runs tests under babashka Clojure (recognizes cognitect test-runner args)"
          :extra-paths ["src" "test" "test-resources"]
          :extra-deps {io.github.cognitect-labs/test-runner
                       {:git/tag "v0.5.1" :git/sha "dfb30dd"}}
          :requires ([cognitect.test-runner :as tr])
          :task (apply tr/-main *command-line-args*)}
         lint
         {:doc "[--rebuild] Lint source code"
          :task lint/-main}
         outdated
         {:doc "Report on outdated dependencies"
          :task (clojure {:continue true} "-M:outdated")}
         pubcheck
         {:doc "run only publish checks (without publishing)"
          :task publish/pubcheck}
         publish
         {:doc "Trigger a release to clojars"
          :task publish/-main}
         neil ;; let's not rely on a random version of neil
         {:doc "Pinned version of babashka/neil (used in scripting)"
          :extra-deps {io.github.babashka/neil {:git/tag "v0.3.67" :git/sha "054ca51"}}
          :task babashka.neil/-main}
         ;; hidden tasks, no need for folks to be trying these ci invoked tasks
         -ci-clojars-deploy
         {:doc "triggered on ci by release tag"
          :task ci-publish/clojars-deploy}
         -ci-github-create-release
         {:doc "triggered on ci by release tag"
          :task ci-publish/github-create-release}
         -ci-cljdoc-request-build
         {:doc "ask cljdoc to build docs for new release"
          :task ci-publish/cljdoc-request-build}}}
